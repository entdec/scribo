li.entry class="#{content.id == @content.id ? 'selected' : ''} #{content.kind == 'folder' ? 'directory open' : 'file'}" data-content="#{content.id}" data-at-content="#{@content.id}" data-controller="#{content.kind == 'folder' ? 'upload' : ''}" data-upload-url="#{upload_admin_site_contents_url(@site)}" data-upload-replace-content-selector=".tree-view" data-upload-extra-data=%[{"content[parent_id]": "#{content.id}"}]
  - if content.kind == 'folder'
    a.list-item data-controller="tree-item" data-action="dblclick->tree-item#rename" data-tree-item-rename-url="#{rename_admin_site_content_url(content.site, content)}"
      span.name data-path="#{content.path}" = content.path
      .tools
        i.fas.fa-file-medical data-action="click->tree-view#newContent" data-kind="text" data-url="#{remote_create_admin_site_contents_url(@site)}" title=I18n.t('scribo.tools.new_file')
        i.fas.fa-folder-plus data-action="click->tree-view#newContent" data-kind="folder" data-url="#{remote_create_admin_site_contents_url(@site)}" title=I18n.t('scribo.tools.new_folder')
        i.fas.fa-trash-alt data-controller="tool" data-action="click->tool#start" data-tool-url="#{destroy_admin_site_content_path(@site, content)}" data-tool-method="delete" data-tool-confirm="Are you sure you want to delete this content?" title=I18n.t('scribo.tools.delete_folder')

  - else
    a.list-item data-controller="tree-item" data-action="click->tree-item#start dblclick->tree-item#rename" data-tree-item-url="#{edit_admin_site_content_url(content.site, content)}" data-tree-item-rename-url="#{rename_admin_site_content_url(content.site, content)}"
      span.name data-path="#{content.path}" = content.path
      .tools
        - if content.id != @content.id
          i.fas.fa-trash-alt data-controller="tool" data-action="click->tool#start" data-tool-url="#{destroy_admin_site_content_path(@site, content)}" data-tool-method="delete" data-tool-confirm="Are you sure you want to delete this content?" title=I18n.t('scribo.tools.delete_file')
  ul data-parent="#{content.id}"
    - content.children.reorder(:path).each do |child|
      = render partial: 'scribo/shared/entry', locals: {content: child}
