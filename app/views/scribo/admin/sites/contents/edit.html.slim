= render 'scribo/shared/ide' do
  = simple_form_for([:admin, @site, @content], html: {multipart: true}) do |f|

    .row style="position: absolute; width: 100%; height: 100%;"
      - if @content.kind == 'asset'
        .col-sm-10
          input type="file" name="content[files][]" multiple="true"
          br
          - if %w[image].include? @content&.content_type_group
            img src=content_path(@content) style="max-width: 100%; border: 1px dashed #ccc;"
          - if %w[font].include? @content&.content_type_group
            css:
              @font-face {
                font-family: 'MyWebFont';
                src: url(#{"#{content_path(@content)}"}); /* IE9 Compat Modes */
              }
            - for i in [10, 12, 14, 16, 18, 20, 22, 24]
              div style="font-family: MyWebFont; font-size: #{i}px;"
                | #{i} - the quick brown fox jumped over the lazy dog.
                br
                | #{i} - THE QUICK BROWN FOX JUMPED OVER THE LAZY DOG.

      - else
        .col-sm-10 data-controller="editor" data-editor-mode="#{@content.content_type}"
          textarea name='content[data]' data-target="editor.textarea"
            = @content.data || 'Start typing here, or drop one or more files on this area.'
          input type="file" name="content[files][]" data-target="editor.file" multiple="true" style="margin-left: -200vh;"

      .col-sm-2
        .row
          .col-sm-12
            button name='commit' value='save' class="btn btn-primary"
              i.fas.fa-save
            a.btn data-toggle='collapse' data-target='#advancedContainer'
              i.fas.fa-info

        .row
          .col-sm-12
            br
            - unless @content.persisted?
              = f.input :path
            = f.association :layout, collection: @layouts, selected: @content.layout_id, label_method: :path, include_blank: true

            - if @content.kind != 'asset'
              = f.input :content_type, collection: @content_types, include_blank: false

            = f.input :state, collection: @states, selected: @content.state, include_blank: true
            = f.input :kind, as: :hidden

            .collapse#advancedContainer
              = f.input :filter
              = f.input :parent_id, as: :hidden
              = f.input :title
              = f.input :properties, as: :code_mirror, input_html: {value: YAML.dump(f.object.properties), data: { height: '80px', lang: 'application/yaml', mode: {name: 'liquid', base: 'application/yaml'}}}

